// Generated by CoffeeScript 1.9.3
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  (function($) {
    var S4, getParams, saveItemToProject, setParams, settings, syncURL;
    if (!settings in window) {
      window.alert("ERROR! Must set settings.js -- see README");
      throw "ERROR! Must set settings.js -- see README";
    }
    settings = window.settings;
    syncURL = settings.apiBase + "sync";
    getParams = {
      token: settings.apiKey,
      seq_no: 0,
      seq_no_global: 0,
      resource_types: JSON.stringify(["projects"])
    };
    setParams = {
      token: settings.apiKey
    };
    chrome.runtime.onMessage.addListener(function(message, sender) {
      var a;
      return a = 2;
    });
    if (!chrome.runtime.onMessage.hasListeners()) {
      console.log("HAS NOT");
      chrome.runtime.onMessage.addListener(function(message, sender) {
        return saveItemToProject(message.input);
      });
    } else {
      console.log("HAS");
    }
    console.log("hi");
    $(window).bind("keydown", settings.saveToProjectBind, function(e) {
      var activeURL;
      activeURL = window.location.href;
      saveItemToProject(activeURL);
      return false;
    });
    saveItemToProject = function(item, projectName, date) {
      if (item == null) {
        item = null;
      }
      if (projectName == null) {
        projectName = "Inbox";
      }
      if (date == null) {
        date = "today";
      }
      if (!item || item === "") {
        return;
      }
      return $.getJSON(syncURL, getParams, function(response) {
        var i, len, p, project, ref, uuid;
        project = null;
        ref = response.Projects;
        for (i = 0, len = ref.length; i < len; i++) {
          p = ref[i];
          if (p.name === projectName) {
            project = p;
            break;
          }
        }
        if (project) {
          uuid = (S4() + S4() + "-" + S4() + "-4" + S4().substr(0, 3) + "-" + S4() + "-" + S4() + S4() + S4()).toLowerCase();
          setParams.commands = JSON.stringify([
            {
              type: "item_add",
              uuid: uuid,
              temp_id: uuid,
              args: {
                project_id: project.id,
                content: item,
                date_string: date
              }
            }
          ]);
          return $.getJSON(syncURL, setParams, function(response) {
            var k, ref1, v;
            ref1 = response.SyncStatus;
            for (k in ref1) {
              v = ref1[k];
              if (indexOf.call(v, "error_tag") >= 0) {
                window.alert("Error!");
                return;
              }
            }
            return window.alert("Added link to \"" + projectName + "\"");
          });
        }
      });
    };
    return S4 = function() {
      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
    };
  })(jQuery);

}).call(this);
